AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'

Resources:

  MyApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: dev
      Auth:
        DefaultAuthorizer: MyLambdaTokenAuthorizer
        Authorizers: 
          MyLambdaTokenAuthorizer:
            FunctionArn: !GetAtt MyAuthFunction.Arn
    
  HelloFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: handler.hello
      Runtime: nodejs20.x
      CodeUri: ./hello
      Events:
        HelloAPI:
          Type: Api
          Properties:
            RestApiId: !Ref MyApi
            Path: /hello
            Method: GET
  
  MyAuthFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: ./authorizer
      Handler: handler.authorizer
      Runtime: nodejs20.x
      VpcConfig:
        SecurityGroupIds:
          - sg-07cd5189fff3b3e5f
        SubnetIds:
          - subnet-073fbedd48a949edb
          - subnet-0306dd111f2d31e35
          - subnet-0b961ebc9ad39675a
          - subnet-07190ab186fbe6c21
          - subnet-0c5a7b56ede58b1f2
          - subnet-0f575c0ae673a7908
      Environment:
        Variables:
          ProxyHostName: "your-db-host"
          Port: "5432"
          DBUserName: "your-db-username"
          DBName: "your-db-name"
      Policies:
        - AWSLambdaVPCAccessExecutionRole
        - Version: '2012-10-17'
          Statement:
            Effect: Allow
            Action:
              - rds-db:connect
            Resource: "*"
  
Outputs:
  Region:
    Description: "Region"
    Value: !Ref AWS::Region

  ApiId:
    Description: "API ID"
    Value: !Ref MyApi

  ApiUrl:
    Description: "API endpoint URL for Prod environment"
    Value: !Sub 'https://${MyApi}.execute-api.${AWS::Region}.amazonaws.com/dev/'